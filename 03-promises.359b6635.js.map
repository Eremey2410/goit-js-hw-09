{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAsBC,SAASC,cAAc,UAC7CC,EAAOF,SAASC,cAAc,QAC9BE,EAAW,GAEjBD,EAAKE,iBAAiB,SACtB,SAAqBC,GACnBF,EAASE,EAAEC,OAAOC,MAAQC,OAAOH,EAAEC,OAAOG,UAG5CV,EAAoBK,iBAAiB,SACrC,SAAyBC,GAEvB,IADAA,EAAEK,iBACGC,EAAI,EAAGA,EAAIR,EAAiB,OAAGQ,GAAK,EACvCC,EAAcD,EAAI,EAAGR,EAAgB,OAClCU,MAAK,SAAAC,G,OAAUjB,EAAAkB,OAAOC,QAAQF,MAC9BG,OAAM,SAAAC,G,OAASrB,EAAAkB,OAAOI,QAAQD,MACjCf,EAAgB,OAAKA,EAAe,QAIxC,IAAMS,EAAgB,SAACQ,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEtDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,SACjDb,OAAOL,EAAgB,Y","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst buttonCreatePromise = document.querySelector('button');\nconst form = document.querySelector('form');\nconst formData = {};\n\nform.addEventListener('input', addDataForm);\nfunction addDataForm(e) {\n  formData[e.target.name] = Number(e.target.value);\n}\n\nbuttonCreatePromise.addEventListener('click', onSubmitPromise);\nfunction onSubmitPromise(e) {\n  e.preventDefault();\n  for (i = 0; i < formData['amount']; i += 1) {\n    createPromise(i + 1, formData['delay'])\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n    formData['delay'] += formData['step'];\n  }\n}\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, Number(formData['delay']));\n  });\n};\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$buttonCreatePromise","document","querySelector","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$formData","addEventListener","e","target","name","Number","value","preventDefault","i","$ce04d3a99e08e73b$var$createPromise","then","result","Notify","success","catch","error","failure","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat"],"version":3,"file":"03-promises.359b6635.js.map"}